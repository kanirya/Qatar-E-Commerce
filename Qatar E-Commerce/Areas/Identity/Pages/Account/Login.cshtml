@page
@model LoginModel

@{
    Layout = "~/Areas/Identity/Pages/_AuthLayout.cshtml";
    ViewData["Title"] = "Log in";
}

<div class="auth-wrapper">
    <div class="auth-container">
        <div class="auth-card">
            <div class="theme-toggle-container">
                <input type="checkbox" id="theme-toggle" class="theme-toggle-input">
                <label for="theme-toggle" class="theme-toggle-label">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="sun-icon">
                        <circle cx="12" cy="12" r="5"></circle>
                        <line x1="12" y1="1" x2="12" y2="3"></line>
                        <line x1="12" y1="21" x2="12" y2="23"></line>
                        <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
                        <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
                        <line x1="1" y1="12" x2="3" y2="12"></line>
                        <line x1="21" y1="12" x2="23" y2="12"></line>
                        <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
                        <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
                    </svg>
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="moon-icon">
                        <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
                    </svg>
                </label>
            </div>

            <div class="auth-content">
                <div class="brand-logo">
                    <div class="logo-circle">
                        <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="logo-icon">
                            <path d="M12 2L2 7L12 12L22 7L12 2Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            <path d="M2 17L12 22L22 17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            <path d="M2 12L12 17L22 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                    </div>
                </div>

                <div class="auth-title">
                    <h1>Welcome Back</h1>
                    <p>Please sign in to continue</p>
                </div>

                <form id="account" method="post" class="login-form">
                    <div asp-validation-summary="ModelOnly" class="validation-summary" role="alert"></div>

                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-icon">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
                                    <polyline points="22,6 12,13 2,6"></polyline>
                                </svg>
                            </div>
                            <input asp-for="Input.Email" class="form-input" autocomplete="username" aria-required="true" placeholder="Email address" />
                        </div>
                        <span asp-validation-for="Input.Email" class="validation-error"></span>
                    </div>

                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-icon">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect>
                                    <path d="M7 11V7a5 5 0 0 1 10 0v4"></path>
                                </svg>
                            </div>
                            <input asp-for="Input.Password" class="form-input" autocomplete="current-password" aria-required="true" placeholder="Password" />
                            <button type="button" class="password-toggle" onclick="togglePassword(this)">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="eye-icon">
                                    <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                                    <circle cx="12" cy="12" r="3"></circle>
                                </svg>
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="eye-off-icon hidden">
                                    <path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"></path>
                                    <line x1="1" y1="1" x2="23" y2="23"></line>
                                </svg>
                            </button>
                        </div>
                        <span asp-validation-for="Input.Password" class="validation-error"></span>
                    </div>

                    <div class="form-options">
                        <div class="checkbox-group">
                            <input class="custom-checkbox" asp-for="Input.RememberMe" id="remember-me" />
                            <label class="checkbox-label" asp-for="Input.RememberMe" for="remember-me">
                                @Html.DisplayNameFor(m => m.Input.RememberMe)
                            </label>
                        </div>
                        <a id="forgot-password" asp-page="./ForgotPassword" class="forgot-link">Forgot password?</a>
                    </div>

                    <button id="login-submit" type="submit" class="btn-submit">
                        <span class="btn-text">Sign in</span>
                        <span class="btn-loader hidden"></span>
                    </button>

                    <div class="form-footer">
                        <p>Don't have an account? <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl" class="register-link">Create an account</a></p>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>



<script>
    document.addEventListener('DOMContentLoaded', function() {
        const themeToggle = document.getElementById('theme-toggle');
        const body = document.body;

        themeToggle.addEventListener('change', function() {
            if (this.checked) {
                body.classList.add('dark-theme');
                localStorage.setItem('theme', 'dark');
            } else {
                body.classList.remove('dark-theme');
                localStorage.setItem('theme', 'light');
            }
        });

        // Check for saved theme preference
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme === 'dark') {
            themeToggle.checked = true;
            body.classList.add('dark-theme');
        }

        // Password visibility toggle
        window.togglePassword = function(button) {
            const input = button.parentNode.querySelector('input');
            const eyeIcon = button.querySelector('.eye-icon');
            const eyeOffIcon = button.querySelector('.eye-off-icon');

            if (input.type === 'password') {
                input.type = 'text';
                eyeIcon.classList.add('hidden');
                eyeOffIcon.classList.remove('hidden');
            } else {
                input.type = 'password';
                eyeIcon.classList.remove('hidden');
                eyeOffIcon.classList.add('hidden');
            }
        };

        // Form submission loading state
        const loginForm = document.getElementById('account');
        const submitBtn = document.getElementById('login-submit');
        const btnText = submitBtn.querySelector('.btn-text');
        const btnLoader = submitBtn.querySelector('.btn-loader');

        loginForm.addEventListener('submit', function() {
            btnText.classList.add('hidden');
            btnLoader.classList.remove('hidden');
            submitBtn.disabled = true;
        });

        // Prevent focus on click outside of inputs
        document.addEventListener('click', function(e) {
            // Only allow focus when explicitly clicking on form elements
            if (!e.target.closest('input, button, select, a, label')) {
                // Remove any existing focus
                if (document.activeElement) {
                    document.activeElement.blur();
                }
                // Prevent default to avoid any automatic focus
                e.preventDefault();
            }
        });
    });
</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}